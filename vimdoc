git checkout master
git checkout -b XXXX_for_Vim_8.1
cp /vim/runtime/doc/XXXX.txt /vimdoc-ja-working/en
git diff --word-diff
git diff
git commit -am "Update XXXX from Vim 8.0 to 8.1"
git push origin XXXX_for_Vim_8.1

For issue #207
XXXX.txt および XXXX.jax を Vim 8.1 用に更新しました。
ご確認お願いいたします。

Vimに関しての困りごと
encodingを切り替えて使うときの.vimrcの取り扱い
fileencodingがnkfだとCP51932
    sakuraだとEUCでerrorなしで開け、変更してもdiffは変更箇所だけ
    Vimだとeuc-jisx0213でerrorなしで開けるが、変更するとバイナリレベルでいろいろ変わっている

～と＃が含まれているファイルがある。
nkf32 -g fileとやるとEUC-JPとなる。
Windows gVimで開くと普通に開けて、fileencoding=euc-jpとなっている。
ただ、そのままgVimで保存するとnkf32の結果がEUCJP-MSになる。
diffすると変わっているように見える。でもgVimだとちゃんと見えるし、fileencodingもeuc-jp。
!nkf32 --ic=eucjp-ms --oc=euc-jp --overwrite %
すれば、EUC-JPに戻る。gVimでのeuc-jpというのは、eucjp-msのことっぽい。
どうにかeucjp-msでなく、euc-jpのまま保存できないか。

'N' で検索文字に飛んでいるとき、普通は一番下に表示されるが、たまに中央に飛ぶ。
視線を移動しないといけないのでちょっと面倒。回避方法はないだろうか。

バグ？
1. 単独で起動
2. 全画面にする？
3. ":e ~/.vimrc" でファイルを開く
4. ":h expression" でヘルプを開く
5. "<c-w>j" で .vimrc のウィンドウに移動する
6. "j" や "k" で移動すると、スクロールしない -> スクロールしないというより再描画されていない、<c-l> で表示される
7. vimrcなしだと起きない気がする

ヘルプ修正候補
expr-entryで間違って "例" と訳されているものがある
g:netrw_browse_split@en のカラム越え、他にもちょいちょい
g:netrw_home@en のスペースが抜けている
g:netrw_localcopycmd@en 周辺の先頭行に不要なスペース、他にもちょいちょいある
g:netrw_localmkdir@en が1行だけスペースインデントになっている
g:netrw_special_syntax@en にもタブの箇所に変なスペース、あとnetrw.vimの説明のところはコマンドではないと思うのだけれど。。ただ8.1でそのように更新されている。

英単語
    wording
    tweak

Vim ネタ
    対象が先にあるとき
        di( 移動しない (何も起きない)
        di{ 移動して削除 -> 期待？
        di[ 移動しない (何も起きない)
        di< 移動しない (何も起きない)
        di" 移動して削除
        di' 移動して削除
        di` 移動して削除

    incsearchで、"/foo\|" と入力した直後にすべての文字がハイライトされるのを防ぐ仕組みがあるけれど、"/\vfoo|" では効かない。

    別ウィンドウや別タブで top などを走らせていると、画面更新のタイミング？で incsearch が消える。

プラグインネタ
    c-a/c-x で英単語をサポートするとか
    one -> two -> three みたいに
    あと曜日(Sun, Mon, 火, 水, Thurthday)とか月(Jan, Feb, Mar, April)とかもできそう
    英語と中国語あたりサポートしておいたらよいのでは

    インデントのまとまりでソートする機能とか
        1. foo
            bar
        2. abc
            def
    これのソートが直感どおりになるようにしたい

    '/'や'n'で検索中に、小窓を開いて次の候補を表示しておくとか

    tyruさんのcfiをstatuslineに入れていると、関数を書いている途中で止まる。
    コメントしたけど反応なし

    句読点の前後だと[]がハイライトされない。:h :endfunction 参照。

    どのタブにも表示される固定ウィンドウを作るとか。もうライブラリとしてありそう。

    ヘルプの80カラムの制限を外して表示する。:h indexとかは改行がいっぱいあって見づらい(個人の感想)。

    単語や行を、", ', (, [, { などで括るプラグイン。
        普通にある
        https://www.clear-code.com/blog/2018/4/23.html

カラースキーム
    cosmic_latte
    allomancer
    escuro
    srcery
    blayu
    hypsteria
    yellow-moon
    orange-moon
    pink-moon
    snow
    skeletor
    chito
    monokai_pro
    perun
    simplifysimplify-dark

mattnさんが導入しているプラグイン
    Plug 'mattn/vim-findroot'
    Plug 'mattn/gist-vim'
    Plug 'mattn/sonictemplate-vim'
    Plug 'ctrlpvim/ctrlp.vim'
    Plug 'twitvim/twitvim'
    Plug 'rking/ag.vim'
    Plug 'mattn/ctrlp-launcher'
    Plug 'koron/dicwin-vim'
    Plug 'tyru/open-browser.vim'
    Plug 'thinca/vim-ambicmd'
    Plug 'thinca/vim-openbuf'
    Plug 'thinca/vim-quickrun'
    Plug 'mattn/quickrunex-vim'
    Plug 'mattn/webapi-vim'
    Plug 'vim-jp/vim-cpp', { 'for': ['cpp', 'c'] }
    Plug 'OrangeT/vim-csharp'
    Plug 'OmniSharp/omnisharp-vim', { 'for': 'cs' }
    Plug 'mattn/emmet-vim', { 'for': ['jsx', 'javascript', 'xml', 'html', 'css', 'php'] }
    Plug 'gorodinskiy/vim-coloresque' ", { 'for': 'css' }
    Plug 'fatih/vim-go', { 'for': 'go' }
    Plug 'kannokanno/previm', { 'for': ['markdown', 'rst'] }
    Plug 'tpope/vim-markdown', { 'for': 'markdown' }
    Plug 'pangloss/vim-javascript', { 'for': 'javascript' }
    Plug 'leafgarland/typescript-vim' ", { 'for': 'typescript' }
    Plug 'mattn/vim-maketable'
    Plug 'NLKNguyen/papercolor-theme'
    Plug 'justinmk/vim-dirvish'
    Plug 'vim-jp/vimdoc-ja'
    Plug 'vim-airline/vim-airline'
    Plug 'vim-airline/vim-airline-themes'
    Plug 'prabirshrestha/async.vim'
    Plug 'prabirshrestha/vim-lsp'

clangd
    [[plugins]]
    repo='prabirshrestha/async.vim'

    [[plugins]]
    repo='prabirshrestha/asyncomplete.vim'

    [[plugins]]
    repo='prabirshrestha/asyncomplete-lsp.vim'

    [[plugins]]
    repo='prabirshrestha/vim-lsp'
    hook_add='''
      if executable('clangd')
        au User lsp_setup call lsp#register_server({
          \ 'name': 'clangd',
          \ 'cmd': {server_info->['clangd']},
          \ 'whitelist': ['c', 'cpp'],
          \ })
      endif
      let g:lsp_diagnostics_echo_cursor = 1
    '''
    
    clangd
    compiledb
